name: CI/CD

on:
  push:
    branches: [master]
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
      - '**/.editorconfig'
      - '**/certificate.cnf'
      - '**/certificate.crt'
      - '**/localhost.key'
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [master]
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
      - '**/.editorconfig'
      - '**/certificate.cnf'
      - '**/certificate.crt'
      - '**/localhost.key'
  workflow_dispatch:

jobs:
  PathsFilter:
    runs-on: ubuntu-latest
    outputs:
      PrivateAdmin: ${{ steps.filter.outputs.PrivateAdmin }}
      Navigation: ${{ steps.filter.outputs.Navigation }}
      PublicAdmin: ${{ steps.filter.outputs.PublicAdmin }}
      KarmaWeb: ${{ steps.filter.outputs.KarmaWeb }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Paths filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            PrivateAdmin:
              - .github/workflows/**
              - 'src/PrivateAdmin/**'
            Navigation:
              - .github/workflows/**
              - 'src/Navigation/**'
            PublicAdmin:
              - .github/workflows/**
              - 'src/PublicAdmin/**'
            KarmaWeb:
              - .github/workflows/**
              - 'src/KarmaWeb/**'
  PrivateAdmin_Build:
    runs-on: ubuntu-latest
    needs: PathsFilter
    if: needs.PathsFilter.outputs.PrivateAdmin == 'true'
    defaults:
      run:
        working-directory: src/PrivateAdmin/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Production build
        run: npm run build
  PrivateAdmin_BuildContainer:
    runs-on: ubuntu-latest
    needs: PrivateAdmin_Build
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the container repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: src/PrivateAdmin
          push: true
          tags: ghcr.io/grillbot/grillbot.web:private_admin
  PrivateAdmin_Deploy_Production:
    runs-on: ubuntu-latest
    environment: "Production_PrivateAdmin"
    needs: PrivateAdmin_BuildContainer
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Execute deployment on SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_Username }}
          password: ${{ secrets.SSH_Password }}
          port: 22
          script: echo '${{ secrets.SSH_Password }}' | sudo -S python3 /scripts/deploy/deploy.py prod/grillbot-privateadmin
  Navigation_Check:
    runs-on: ubuntu-latest
    needs: PathsFilter
    if: needs.PathsFilter.outputs.Navigation == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check HTML
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: src/Navigation/
          css: true
  Navigation_BuildContainer:
    runs-on: ubuntu-latest
    needs: Navigation_Check
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the container repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: src/Navigation
          push: true
          tags: ghcr.io/grillbot/grillbot.web:navigation
  Navigation_Deploy_Production:
    runs-on: ubuntu-latest
    environment: "Production_Navigation"
    needs: Navigation_BuildContainer
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Execute deployment on SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_Username }}
          password: ${{ secrets.SSH_Password }}
          port: 22
          script: echo '${{ secrets.SSH_Password }}' | sudo -S python3 /scripts/deploy/deploy.py prod/grillbot-navigation
  PublicAdmin_Build:
    runs-on: ubuntu-latest
    needs: PathsFilter
    if: needs.PathsFilter.outputs.PublicAdmin == 'true'
    defaults:
      run:
        working-directory: src/PublicAdmin/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Production build
        run: npm run build
  PublicAdmin_BuildContainer:
    runs-on: ubuntu-latest
    needs: PublicAdmin_Build
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the container repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: src/PublicAdmin
          push: true
          tags: ghcr.io/grillbot/grillbot.web:public_admin
  PublicAdmin_Deploy_Production:
    runs-on: ubuntu-latest
    environment: "Production_PublicAdmin"
    needs: PublicAdmin_BuildContainer
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Execute deployment on SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_Username }}
          password: ${{ secrets.SSH_Password }}
          port: 22
          script: echo '${{ secrets.SSH_Password }}' | sudo -S python3 /scripts/deploy/deploy.py prod/grillbot-publicadmin
  KarmaWeb_Build:
    runs-on: ubuntu-latest
    needs: PathsFilter
    if: needs.PathsFilter.outputs.KarmaWeb == 'true'
    defaults:
      run:
        working-directory: src/KarmaWeb/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install dependencies
        run: npm ci
      - name: Production build
        run: npm run build
  KarmaWeb_BuildContainer:
    runs-on: ubuntu-latest
    needs: KarmaWeb_Build
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the container repository
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: src/KarmaWeb
          push: true
          tags: ghcr.io/grillbot/grillbot.web:karma
  KarmaWeb_Deploy_Production:
    runs-on: ubuntu-latest
    environment: "Production_KarmaWeb"
    needs: KarmaWeb_BuildContainer
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Execute deployment on SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_Username }}
          password: ${{ secrets.SSH_Password }}
          port: 22
          script: echo '${{ secrets.SSH_Password }}' | sudo -S python3 /scripts/deploy/deploy.py prod/grillbot-karma
