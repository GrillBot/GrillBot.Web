name: CI/CD

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [master]
  workflow_dispatch:

jobs:
  PathsFilter:
    runs-on: ubuntu-latest
    outputs:
      PrivateAdmin: ${{ steps.filter.outputs.PrivateAdmin }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Paths filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            PrivateAdmin:
              - .github/workflows/**
              - 'src/PrivateAdmin/**'
  PrivateAdmin_Build:
    runs-on: ubuntu-latest
    needs: PathsFilter
    if: needs.PathsFilter.outputs.PrivateAdmin == 'true'
    defaults:
      run:
        working-directory: src/PrivateAdmin/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install dependencies
        run: npm ci
      - name: Production build
        run: npm run build
  PrivateAdmin_BuildContainer:
    runs-on: ubuntu-latest
    needs: PrivateAdmin_Build
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the container repository
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build container
        run: docker build -t ghcr.io/grillbot/grillbot.web:private_admin src/PrivateAdmin
      - name: Push container
        run: docker push ghcr.io/grillbot/grillbot.web:private_admin
  PrivateAdmin_Deploy_Production:
    runs-on: ubuntu-latest
    environment: "Production_PrivateAdmin"
    needs: PrivateAdmin_BuildContainer
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Execute deployment on SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_Username }}
          password: ${{ secrets.SSH_Password }}
          port: 22
          script: echo '${{ secrets.SSH_Password }}' | sudo -S /scripts/podman-reload.py grillbot-web
